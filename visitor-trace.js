const RitaScriptVisitor = require('./lib/RitaScriptVisitor').RitaScriptVisitor;

/**
 * This Visitor walks the tree generated by a parser
 */
class Visitor extends RitaScriptVisitor {

  constructor(context, lexerRules, parserRules) {
    super();
    this.lexerRules = lexerRules;
    this.parserRules = parserRules;
    this.context = context || {};
  }

  // Entry point for tree visiting
  start(ctx, trace) {
    this.trace = trace || false;
    return this.visitScript(ctx);
  }

  getRuleName(ctx) {
    return ctx.hasOwnProperty('symbol') ?
      this.lexerRules[ctx.symbol.type] :
      this.parserRules[ctx.ruleIndex];
  }

  visitChildren(ctx) {
    this.trace && console.log(this.getRuleName(ctx)+':',ctx.getText());
    return ctx.children.reduce((acc, child) => acc += this.visit(child), '');
  }

  visitTerminal(ctx) {
    return ctx.getText();
  }
}

module.exports = Visitor;
